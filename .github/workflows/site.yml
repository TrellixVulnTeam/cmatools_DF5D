# ####################################################################
# GitHub workflow action file
# Checks the Sphinx documentation site is built and active
# ####################################################################

# Name for workflow (also displayed on the associated badges)
name: site

# Controls when the action will run. Triggers the workflow only if docs workflow succeeds
on: [push]

jobs:
  job:
    runs-on: ubuntu-latest
    steps:
    - name: Confirm documentation gh-pages has built
      id: built
      run: |
        ath="Accept: application/vnd.github.v3+json"
        url="https://api.github.com/repos/cma-open/cmatools/pages"
        response=$(curl -H "${ath}" -u ${{ secrets.ACCESS_TOKEN }} "${url}")
        echo " --***-- "
        echo "${response}"
        echo " --***-- "
        echo "::set-output name=body::"${response}""
    - name: Test the job steps outputs
      id: check
      run: |
        echo "${{ steps.built.outcome }}"
        echo "${{ steps.built.outputs.body }}"
        echo "${{fromJson(steps.built.outputs.body).status}}"
        echo "::set-output name=status::"${{fromJson(steps.built.outputs.body).status}}""
        echo "::set-output name=url::"${{fromJson(steps.built.outputs.body).html_url}}""
    - name: Confirm documentation gh-pages is accessible (public pages)
      id: up
      run: |
        url="${{ steps.check.outputs.url }}"
        response=$(curl -Li "${url}" -o /dev/null -w '%{http_code}\n' -s)
        echo " --***-- "
        echo "Status code: ${response}"
        echo " --***-- "
    - name: Check failures
      if: steps.check.outputs.status != 'built'
      run: |
        echo "${{ steps.check.outputs.status }}"
        exit 1
    - name: Check if site is up
      if: steps.check.outputs.url != '200' && steps.check.outputs.url != '301'
      run: |
        echo "Site not accessible"
        echo "${{ steps.check.outputs.url }}"
        exit 1
# curl -Li mazgi.com -o /dev/null -w '%{http_code}\n' -s
#|| steps.check.outputs.url != '301'