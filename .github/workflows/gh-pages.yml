# Content inspired from these sources
# https://github.com/ammaraskar/sphinx-action-test/blob/master/.github/workflows/default.yml
# https://www.innoq.com/en/blog/github-actions-automation/
# https://github.com/marketplace/actions/publish-to-git
# https://github.com/seanmiddleditch/gha-publish-to-git/blob/master/entrypoint.sh
# https://github.com/JacksonMaxfield/github-pages-deploy-action-python/blob/master/entrypoint.sh

# This workflow action builds and pushes any recent changes to the sphinx documentation to the gh-pages branch

name: gh-pages

# Ensure pages only re-built after pushes to master branch not feature branches
on:
  push:
    #branches:
    #  - master
# Set environment variables so this workflow action is easy tore-use in other repos
env:
  DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
  REPO_NAME: cmatools
  CONDA_ENV: cmatools-env
  REPO_URI: https://x-access-token:${DEPLOY_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1}
    - name: Install dependencies
      run: |
        conda update conda
        conda env create -f bin/environment.yml
    - name: Install the package
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $CONDA_ENV
        python setup.py install
    - name: Build and publish Sphinx documentation to gh-pages
      run: |
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $CONDA_ENV

        # Setup the username and email for git
        git config user.name "$GITHUB_ACTOR"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        # Set pull to use rebase
        # Rebase wil create new commits and apply them to the specified base, to give a linear history
        git config pull.rebase true

        # Show all current git branches, for debugginh
        git branch -a

        # Checkout the gh-pages branch, force checkout to override any recent changes in master
        # This brings in the last published version of the documentation in gh-pages
        git checkout -f gh-pages

        # Clean up the working repo, deletes any untracked files from the current checkout out repo
        # (force, includes directories, removes ignored files)
        git clean -dfx

        # Checkout only the directories needed to build the documentation from master
        git checkout -f origin/master bin/
        git checkout -f origin/master docs/

        # Build the html documentation with sphinx
        cd bin
        chmod +x build-sphinx-docs.sh
        ./build-sphinx-docs.sh

        echo "Documentation built"
        cd  ..
        cd docs/build
        echo $PWD

        # Confirm git status, for debugging
        git status
        echo "testing"
        echo $PWD

        # Add the newly created files and directories to git
        git add -f _static
        git add -f _sources
        git add -f *.html
        git add -f *.inv
        git add -f *.js
        cd ../..
        git add docs/

        # Confirm git status, for debugging
        git status

        # Commit all the changes, inc message
        # Always exit with status 0

        git commit -m "Update documentation on gh-pages" -a || true

        #if [ $? -ne 0 ]; then
        #   echo "nothing to commit"
        #   exit 0
        #fi

        # Set the remote url for the github repo, with deploy token to allow authentication from the workflow to repo
        git remote set-url origin "$REPO_URI"

        echo "Push changes to the gh-pages branch"
        git push --force-with-lease origin gh-pages